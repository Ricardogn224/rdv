name: PROD CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          cd client
          npm i 
          nohup npm run dev &

  run_back_end:
    name: run_back_end
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker CLI
        run: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl software-properties-common -y
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io -y

      - name: Load .env.local file
        run: |
            cd server
            echo "Loading environment variables from .env.local"
            set -a
            [ -f ".env.local" ] && . ".env.local"
            set +a

      - name: Install dependencies
        run: |
          cd server
          docker compose up -d 

  deployment_server_back_end:
    name: Deployment to Server
    runs-on: ubuntu-latest
    needs: run_back_end
    env:
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      SSH_IP: ${{ secrets.SSH_IP }}
    steps:
      - name: Install expect
        run: sudo apt-get install expect -y
  
      - name: Deploy code to server
        run: |
          expect -c '
            spawn scp -r * $env(SSH_USERNAME)@SSH_IP:/home/$env(SSH_USERNAME)/servers -y
            expect "password:" 
            send "$env(SSH_PASSWORD)\r"
            interact
          '
          
          